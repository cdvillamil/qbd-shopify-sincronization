name: Build & Deploy ‚Äî Staging + Prod (ZIP)

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

concurrency:
  group: webapp-deploy
  cancel-in-progress: true

jobs:
  build:
    runs-on: [self-hosted, Windows, X64]
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: Install & Build
        shell: powershell
        run: |
          $ErrorActionPreference = 'Stop'

          if (Test-Path "package-lock.json") {
            Write-Host "üß∞ package-lock.json encontrado ‚Üí npm ci"
            npm ci
          } else {
            Write-Host "‚ö†Ô∏è  Sin package-lock.json ‚Üí npm install"
            npm install --no-audit --no-fund
          }

          npm run build --if-present

          if (-not (Test-Path "node_modules\express")) {
            Write-Warning "No se encontr√≥ 'express' en node_modules. Verifica dependencies."
          }

      - name: Prepare deploy folder (robocopy handles long paths)
        shell: powershell
        run: |
          $ErrorActionPreference = 'Stop'
          Remove-Item -Recurse -Force deploy -ErrorAction SilentlyContinue
          New-Item -ItemType Directory -Path deploy | Out-Null
          Copy-Item package.json -Destination deploy
          if (Test-Path package-lock.json) { Copy-Item package-lock.json -Destination deploy }

          # C√≥digo (ajusta si usas otra estructura)
          if (Test-Path dist) { robocopy dist deploy\dist /MIR | Out-Null }
          if (Test-Path src)  { robocopy src  deploy\src  /MIR | Out-Null }
          if (Test-Path index.js)  { Copy-Item index.js  -Destination deploy }
          if (Test-Path server.js) { Copy-Item server.js -Destination deploy }
          if (Test-Path web.config) { Copy-Item web.config -Destination deploy }

          # Dependencias de runtime (robocopy devuelve c√≥digos 0-7 como √©xito)
          if (-not (Test-Path node_modules)) { Throw "No existe node_modules (¬øfall√≥ npm install/ci?)." }
          robocopy node_modules deploy\node_modules /MIR /MT:16 /R:1 /W:1
          $rc=$LASTEXITCODE; if ($rc -ge 8) { Throw "robocopy fall√≥ con c√≥digo $rc" }

      - name: Create ZIP with tar (better for node_modules)
        shell: powershell
        run: |
          if (Test-Path app.zip) { Remove-Item app.zip -Force }
          tar -a -cf app.zip -C deploy .

      - name: Sanity check ZIP (express present)
        shell: powershell
        run: |
          $list = tar -tf app.zip
          if ($list -notmatch "node_modules/express/package.json") {
            Throw "El ZIP no contiene node_modules/express. Abortando para evitar un deploy roto."
          }

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: node-app-zip
          path: app.zip

  deploy_staging:
    runs-on: [self-hosted, Windows, X64]
    needs: build
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: node-app-zip
      - name: Deploy to STAGING
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'stagging-qbd-shopify-sincronization'
          package: app.zip
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_STAGING }}

  deploy_production:
    runs-on: [self-hosted, Windows, X64]
    needs: deploy_staging
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: node-app-zip
      - name: Deploy to PRODUCTION
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'qbd-shopify-sincronization'
          package: app.zip
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_PROD }}